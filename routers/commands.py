from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from services.database import add_user, DB_PATH, get_all_command_stats, is_admin
import logging
import sqlite3

router = Router()
@router.message(Command("start"))
async def start_command(message: Message):
    add_user(message.from_user.id)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ü–µ–Ω –Ω–∞ –∏–≥—Ä—ã –∏ DLC –≤ steam\n"
                         "/help - –ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ –∫–æ–º–∞–Ω–¥—ã"
                         "–ê–ª—ë –∞–ª—ë –∏–≥—Ä—ã –¥–∞ –¥–∞ –¥–µ–Ω—å–≥–∏")

    logging.info(f"User {message.from_user.id} called /start")

@router.message(Command("help"))
async def help_command(message: Message):
    await message.answer("–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞: \n"
                         "/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ \n"
                         "/help - –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —ç—Ç–æ –º–µ–Ω—é \n"
                         "/subscribe –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –ø—Ä–∏ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω—ã –Ω–∞ –∏–≥—Ä—É / DLC —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º id –¥–æ —É—Ä–æ–≤–Ω—è price –≤ —Ä—É–±–ª—è—Ö \n"
                         "/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è \n"
                         "/list - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –∑–∞—è–≤–∫–∏"
                         "/edit - –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É \n\n"
                         "‚ÑπÔ∏è –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:\n\n"
                         "1. –ù–∞–π—Ç–∏ ID –∏–≥—Ä—ã –≤ Steam (–≤ URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–≥—Ä—ã)\n"
                         "   –ü—Ä–∏–º–µ—Ä: https://store.steampowered.com/app/730/CounterStrike_2/\n"
                         "   ID –∏–≥—Ä—ã: 730\n\n"
                         "2. –î–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ: /subscribe\n"
                         "3. –£–∫–∞–∑–∞—Ç—å ID –∏–≥—Ä—ã –∏ –∂–µ–ª–∞–µ–º—É—é —Ü–µ–Ω—É\n\n"
                         "üì£ –ë–æ—Ç –±—É–¥–µ—Ç —É–≤–µ–¥–æ–º–ª—è—Ç—å –≤–∞—Å, –∫–æ–≥–¥–∞ —Ü–µ–Ω–∞ –æ–ø—É—Å—Ç–∏—Ç—Å—è –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω–æ–π!"
                         )

    logging.info(f"User {message.from_user.id} called /help")

@router.message(Command("stats"))
async def stats_command(message: Message):
    user_id = message.from_user.id

    if not is_admin(user_id):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω ‚Äî –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    conn = sqlite3.connect(DB_PATH)
    c = conn.cursor()
    c.execute("SELECT COUNT(*) FROM users")
    total_users = c.fetchone()[0]
    conn.close()

    stats = get_all_command_stats()
    if not stats:
        await message.answer("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞.")
        return

    reply = ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:"]
    for cmd, count in stats:
        reply.append(f"{cmd} ‚Äî {count}")

    await message.answer("\n".join(reply))